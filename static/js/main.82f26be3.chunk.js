(this["webpackJsonpmy-app"]=this["webpackJsonpmy-app"]||[]).push([[0],Array(21).concat([function(e,t,a){e.exports=a(47)},,,,,function(e,t,a){},,,,,,function(e,t,a){e.exports=a.p+"static/media/Hack_Reactor_Certificate.643292f5.png"},function(e,t,a){e.exports=a.p+"static/media/Aubrey_Bachant_Resume.b15f9d85.pdf"},function(e,t,a){e.exports=a.p+"static/media/ripta-dashboard.e012080a.png"},function(e,t,a){e.exports=a.p+"static/media/osmnx_nyc_crop.9d354dac.png"},function(e,t,a){e.exports=a.p+"static/media/rhyme_ratio_violin_thumbnail.58a2095c.png"},function(e,t,a){e.exports=a.p+"static/media/ripta-animation.02bae494.gif"},function(e,t,a){e.exports=a.p+"static/media/osmnx_nyc.a7ae3ae9.png"},function(e,t,a){e.exports=a.p+"static/media/osmnx_nyc_closeup.67777766.png"},function(e,t,a){e.exports=a.p+"static/media/osmnx_williamsburg.b5189c3a.png"},function(e,t,a){e.exports=a.p+"static/media/rhyme_ratio_scatter.6bb91319.png"},function(e,t,a){e.exports=a.p+"static/media/rhyme_ratio_violin.392cbe4a.png"},function(e,t,a){e.exports=a.p+"static/media/rhyme_ratio_mean.a0aec0ff.png"},function(e,t,a){e.exports=a.p+"static/media/rhyme_ratio_full.95e86c4c.png"},function(e,t,a){e.exports=a.p+"static/media/rhyme_type.0c08c21d.png"},function(e,t,a){e.exports=a.p+"static/media/instrumental.7eaefe39.png"},function(e,t,a){"use strict";a.r(t);var n=a(0),l=a.n(n),r=a(18),i=a.n(r),o=(a(26),a(5)),s=a(6);var c=function(){return l.a.createElement("nav",{className:"navbar navbar-dark bg-dark"},l.a.createElement("div",{className:"container-fluid"},l.a.createElement("div",{className:"navbar-header"},l.a.createElement(o.b,{to:"/"},l.a.createElement("div",{className:"navbar-brand"},l.a.createElement("img",{src:"favicon.ico",alt:"favicon"})))),l.a.createElement("ul",{className:"nav"},l.a.createElement(o.b,{to:"/resume"},l.a.createElement("li",{className:"nav-item nav-link"},"Resume")),l.a.createElement(o.b,{to:"/projects"},l.a.createElement("li",{className:"nav-item nav-link"},"Projects")))))};var m=function(){return l.a.createElement("div",{id:"about-background",className:"container-fluid"},l.a.createElement("div",{className:"jumbotron"},l.a.createElement("h1",null,"AUBREY LYNN BACHANT"),l.a.createElement("p",null,"I am a programmer and web developer passionate about working with and analyzing data to find solutions for civic and social problems. I am particularly interested in applying those skills to help better understand and improve transit, urban planning, and language.")))};var h=function(){return l.a.createElement("div",{className:"page-content",id:"resume"},l.a.createElement("div",null,l.a.createElement("h1",null,"AUBREY LYNN BACHANT"),l.a.createElement("h4",null,l.a.createElement("a",{href:"mailto:aubreybachant@gmail.com"},"aubreybachant@gmail.com")," | 774-400-8759 | ",l.a.createElement("a",{href:"https://www.linkedin.com/in/aubrey-bachant/"},"LinkedIn")," | ",l.a.createElement("a",{href:"https://github.com/abachant"},"GitHub")),l.a.createElement("h4",null,"Boston, Massachusetts ",l.a.createElement("small",null,"(willing to relocate)"))),l.a.createElement("hr",null),l.a.createElement("div",null,l.a.createElement("h3",null,"Skills"),l.a.createElement("ul",null,l.a.createElement("li",null,"JavaScript"),l.a.createElement("ul",null,l.a.createElement("li",null,"React"),l.a.createElement("li",null,"Node"),l.a.createElement("li",null,"Express"),l.a.createElement("li",null,"Babel"),l.a.createElement("li",null,"jQuery"),l.a.createElement("li",null,"Jest"),l.a.createElement("li",null,"Sequelize"),l.a.createElement("li",null,"ES6")),l.a.createElement("li",null,"TypeScript"),l.a.createElement("li",null,"Python"),l.a.createElement("ul",null,l.a.createElement("li",null,"Pandas"),l.a.createElement("li",null,"Jupyter Notebook"),l.a.createElement("li",null,"Matplotlib"),l.a.createElement("li",null,"Plotly")),l.a.createElement("li",null,"SQL"),l.a.createElement("ul",null,l.a.createElement("li",null,"PostgreSQL"),l.a.createElement("li",null,"MariaDB"),l.a.createElement("li",null,"MYSQL")),l.a.createElement("li",null,"NOSQL"),l.a.createElement("ul",null,l.a.createElement("li",null,"Firebase"),l.a.createElement("li",null,"MongoDB")),l.a.createElement("li",null,"Git"),l.a.createElement("ul",null,l.a.createElement("li",null,"GitHub"),l.a.createElement("li",null,"GitHub Actions")),l.a.createElement("li",null,"Bash"),l.a.createElement("li",null,"HTML"),l.a.createElement("li",null,"CSS"),l.a.createElement("ul",null,l.a.createElement("li",null,"SASS"),l.a.createElement("li",null,"BEM"),l.a.createElement("li",null,"Bootstrap")),l.a.createElement("li",null,"Webpack"),l.a.createElement("li",null,"Docker"),l.a.createElement("li",null,"Agile Development"),l.a.createElement("li",null,"Tulip App Builder"),l.a.createElement("li",null,"Windows Office(Word, Excel, Powerpoint)"),l.a.createElement("li",null,"SketchUp CAD Software"),l.a.createElement("li",null,"French(intermediate)")),l.a.createElement("h3",null,"Projects"),l.a.createElement("div",{className:"resume-subsection"},l.a.createElement("h4",null,"In Progress"),l.a.createElement("h5",null,l.a.createElement("a",{href:"https://github.com/abachant/laneclaim"},"Lane Claim")),l.a.createElement("ul",null,l.a.createElement("li",null,"Lane Claim is a progressive web app designed for tracking and reporting bikelane hazards, primarily cars"),l.a.createElement("li",null,"It is built in TypeScript and React, is styled with SASS, and uses Jest for testing"),l.a.createElement("li",null,"It uses Firebase ",l.a.createElement("a",{href:"https://firebase.google.com/products/realtime-database/"},"Realtime Database")," and ",l.a.createElement("a",{href:"https://firebase.google.com/products/storage/"},"Storage")," for its data")),l.a.createElement("h4",null,"Complete"),l.a.createElement("p",null,"See ",l.a.createElement("a",{href:"projects"},"Projects page"))),l.a.createElement("h3",null,"Experience"),l.a.createElement("div",{className:"resume-subsection"},l.a.createElement("h4",null,l.a.createElement("a",{href:"https://www.linkedin.com/company/getturnout/"},"Everyspace"),", New York, NY"),l.a.createElement("h5",null,"Junior Software Engineer: (June 2021\u2014Current)"),l.a.createElement("ul",null,l.a.createElement("li",null,"Added new reusable React components for searching and adding locations for appointment creation"),l.a.createElement("li",null,"Added new API endpoints for fetching user information"),l.a.createElement("li",null,"Increased Unit, Functional, and Integration test coverage by 15%"),l.a.createElement("li",null,"Used Scrum development to better collaborate with teammates"))),l.a.createElement("h3",null,"Education"),l.a.createElement("div",{className:"resume-subsection"},l.a.createElement("h4",null,l.a.createElement("a",{href:"https://www.hackreactor.com/"},"Hack Reactor (2021)")),l.a.createElement("ul",null,l.a.createElement("li",null,"Advanced Software Engineering Immersive Program"),l.a.createElement("img",{className:"certificate",src:a(32),alt:"Hack Reactor Certificate"})))),l.a.createElement("hr",null),l.a.createElement("div",null,l.a.createElement("a",{href:a(33),download:!0},"Download Resume as PDF")))},u=a(9),d=a(10),p=a(11),g=a(12),b=function(e){Object(g.a)(a,e);var t=Object(p.a)(a);function a(){return Object(u.a)(this,a),t.apply(this,arguments)}return Object(d.a)(a,[{key:"render",value:function(){return l.a.createElement("div",{className:"img-thumbnail"},l.a.createElement("div",{className:"thumbnail-image-container"},l.a.createElement("img",{src:this.props.imageSrc,alt:this.props.thumbnail,className:"thumbnail-image"})),l.a.createElement("div",{className:"thumbnail-info-container"},l.a.createElement("h3",null,this.props.title),l.a.createElement("p",null,this.props.description)))}}]),a}(l.a.Component),f=function(e){Object(g.a)(n,e);var t=Object(p.a)(n);function n(e){var l;return Object(u.a)(this,n),(l=t.call(this,e)).state={projectThumbnails:[{title:"This Site",id:"1",url:"abachant-github-pages",description:"A custom website built from scratch",imageSrc:"android-chrome-512x512.png",imageAlt:"thumbnail"},{title:"RIPTA Dashboard",id:"2",url:"RIPTA-dashboard",description:"Realtime dashboard using RIPTA's API",imageSrc:a(34),imageAlt:"thumbnail"},{title:"OSMnx Grid Analysis",id:"3",url:"osmnx-grids",description:"Using OSMnx to analyze the grids of New York City",imageSrc:a(35),imageAlt:"thumbnail"},{title:"Rhyme Scheme Analysis",id:"4",url:"rhyme-scheme",description:"A Jupyter Notebook for analyzing stylistic habits of songwriters",imageSrc:a(36),imageAlt:"thumbnail"}]},l}return Object(d.a)(n,[{key:"createThumbnails",value:function(){return this.state.projectThumbnails.reverse().map((function(e){return l.a.createElement(o.b,{to:"/projects/".concat(e.url),className:"col-lg-4 col-md-6 thumbnail"},l.a.createElement(b,{title:e.title,description:e.description,imageSrc:e.imageSrc,imageAlt:e.imageAlt}))}))}},{key:"render",value:function(){return l.a.createElement("div",{className:"container-fluid thumbnail-container page-content"},this.createThumbnails())}}]),n}(l.a.Component);var y=function(){return l.a.createElement("footer",{className:"global-footer"},"\xa9",(new Date).getFullYear()," Aubrey Bachant")},E=[{title:"This Site",id:"1",url:"abachant-github-pages",description:"",thumbnailSrc:"",thumbnailAlt:"",html:l.a.createElement("div",null,l.a.createElement("div",null,l.a.createElement("h1",null,"Github-Pages Portfolio"),l.a.createElement("h5",null,"February 2018"),l.a.createElement("p",null,"This site was built from scratch in React. It is hosted though GitHub's lovely ",l.a.createElement("a",{href:"https://pages.github.com/"},"Pages.")),l.a.createElement("p",null,"After I changed my GitHub profile name the GitHub Pages portfolio hosted under my previous name no longer worked. So I decided to utilize my new React skills to completely rebuild my new portfolio from the ground up. The previous site was written in basic html css and jQuery. Most of the content stayed the same and was able to be transferred from the old site easily, but I was able to greatly improve the structure and add new functionality with React. Instead of just using raw html files I got the chance to implement my new knowledge of React-Router to dynamically create multiple pages. This was a lot of fun since I had only used React before for single page applications. I also got the chance to reorganize and improve the styling methodologies by implementing BEM.")),l.a.createElement("hr",null),l.a.createElement("div",null,l.a.createElement("p",null,l.a.createElement("a",{href:"https://github.com/abachant/Gbachant.github.io",className:"footer"},"View previous project on Github")),l.a.createElement("p",null,l.a.createElement("a",{href:"https://github.com/abachant/abachant.github.io",className:"footer"},"View project on GitHub"))))},{title:"RIPTA Dashboard",id:"2",url:"RIPTA-dashboard",description:"",thumbnailSrc:"",thumbnailAlt:"",html:l.a.createElement("div",null,l.a.createElement("div",null,l.a.createElement("h1",null,"RIPTA Dashboard"),l.a.createElement("h5",null,"January 2018"),l.a.createElement("img",{id:"ripta-background",src:a(37),alt:"real-time RIPTA display animation",className:"img-responsive"}),l.a.createElement("p",null,"RIPTA-Dashboard is a Python dashboard for viewing real-time data from its RIPTA's API. The data is first taken in and organized into a pandas dataframe then the current location of each bus is mapped along with information about its speed, id, and bus route using Ploty's framework ",l.a.createElement("a",{href:"https://plot.ly/products/dash/"},"Dash"),"."),l.a.createElement("h4",null,"Project Data"),l.a.createElement("p",null,"All the data for the project came from ",l.a.createElement("a",{href:"http://realtime.ripta.com:81/"},"RIPTA's own API."),"The API provides us with a JSON file of a whole range of the statuses of its buses and bus stops at the time it was read."),l.a.createElement("h4",null,"Future Goals"),l.a.createElement("p",null,"One of the most important goals for RIPTA-Dashboard is to eventually be able to get smoother updates of the onscreen data. I was successful at first by adding the property ",l.a.createElement("code",null,"Animation=True")," to the",l.a.createElement("code",null,"dcc.Graph")," and was able to have smooth updates that only changed the position of data plots without entirely reloading the whole page and other unnecessary elements. Unfortunately, the ",l.a.createElement("code",null,"Animate"),"property is still in beta and ended up breaking our ability to maintain camera position and zoom and as result would always go back to its default position after each API callback. For the time being I was forced to sacrifice smooth transitions for the ability to maintain camera position and figure since it is more important to have a constant state of reference when comparing the movements of objects."),l.a.createElement("p",null,"There is also a lot more data in the API than just location, speed, vehicle id, and which route a bus is currently on. I eventually want use the data they give about the buses' delay to have a real-time punctuality display for each bus. I would also like to keep a running average of delay for each bus route and individual bus stop in order to help identify which have the best and worst punctuality and to match that with other data to potentially identify why.")),l.a.createElement("hr",null),l.a.createElement("div",null,l.a.createElement("p",null,l.a.createElement("a",{href:"https://github.com/abachant/RIPTA-dashboard",className:"footer"},"View project on GitHub"))))},{title:"OSMnx Grid Analysis",id:"3",url:"osmnx-grids",description:"",thumbnailSrc:"",thumbnailAlt:"",html:l.a.createElement("div",null,l.a.createElement("div",null,l.a.createElement("h1",null,"Analyzing Grids with OSMnx"),l.a.createElement("h5",null,"February 2018"),l.a.createElement("p",null,"This is project I have been interested in doing for quite some time now. It was inspired by looking at the beautiful and chaotic mixing together of grids in New York City, ",l.a.createElement("a",{href:"https://www.google.com/maps/place/Brooklyn,+NY/@40.6496725,-73.9659865,12.5z/data=!4m5!3m4!1s0x89c24416947c2109:0x82765c7404007886!8m2!3d40.6781784!4d-73.9441579"},"Brooklyn")," in particular. I became interested in finding a way to organize and analyze the relationships of the various grids based on angles of their bearings. It wasn't until I found ",l.a.createElement("a",{href:"https://github.com/gboeing/osmnx"},"OSMnx"),", a Python package for working with and analyzing OpenStreetMap files made by ",l.a.createElement("a",{href:"http://geoffboeing.com/"},"Geoff Boeing"),", that I was able to find the right tool to do so."),l.a.createElement("p",null,"OSMnx comes with many useful functions for analyzing maps by default. One such function is the ability to retrieve the bearings of a network's streets and ",l.a.createElement("a",{href:"https://github.com/gboeing/osmnx-examples/blob/master/notebooks/15-calculate-visualize-edge-bearings.ipynb"},"graph their frequency"),", but this wasn't enough."),l.a.createElement("p",null,"Anyone familiar with working with OpenStreetMap files will know that they aren't exactly perfect representations. This is due to the very nature of how they are created. OSM files are composed of nodes and ways. Most of these nodes and ways were placed by humans physically overlaying them onto satellite imagery and can be prone to human error. As a result, nodes and ways that should theoretically be perfectly aligned and ordered are not."),l.a.createElement("p",null,"To overcome this I accessed the ",l.a.createElement("code",null,"bearing")," attribute inside the networkx multidigraph and created another attribute,",l.a.createElement("code",null,"rounded_bearing"),", composed of ",l.a.createElement("code",null,"bearing")," rounded to an integer. This allows us to filter the graph by edge bearings much easier and even chose to only graph the bearings that we desire."),l.a.createElement("p",null,"I also added another attribute ",l.a.createElement("code",null,"modulo_bearing")," which is just the ",l.a.createElement("code",null,"rounded_bearing"),"modulo 90. By using modulo 90 I was able to get all edges placed into 90 groups composed of edges who share either parallel or perpendicular edge bearings. From there I was able use an osmnx function, ",l.a.createElement("code",null,"osmnx.get_edge_colors_by_attr()"),", to assign a different color to each of the 90 groups of edges and eventually plot them."),l.a.createElement("h5",null,"Downtown Manhattan and Brooklyn"),l.a.createElement("figure",null,l.a.createElement("img",{src:a(38),alt:"osmnx-grids of New York City by compass bearing"}),l.a.createElement("figcaption",{className:"col-lg-5"},"Each group of perpendicular bearings is represented by a different color. The grouping of grids becomes immediately apparent. What is most interesting are groups of grids that aren't connected; though they are physically seperated they still follow the same bearings. For instance note the two purple bearing groups: one at the Brooklyn side of the Brooklyn and Manhattan bridges and the other to the far east of Prospect Park in the bottom right corner of the image."))),l.a.createElement("div",null,l.a.createElement("h5",null,"Closeup of downtown Manhattan and Brooklyn"),l.a.createElement("figure",null,l.a.createElement("img",{src:a(39),alt:"closeup of osmnx-grids of New York City"}),l.a.createElement("figcaption",{className:"col-lg-5"},"Note how the purple bearings on the Brooklyn end of the Manhattan and Brooklyn bridges merge with and become part of the grids of the dark orange bearings just south of the Brooklyn Navy Yard. One of the main things I was interested in doing with this project was analyzing the 'borders' of groups of grids and how their edges met and bonded together."))),l.a.createElement("div",null,l.a.createElement("h5",null,"Williamsburg, Brooklyn"),l.a.createElement("figure",null,l.a.createElement("img",{src:a(40),alt:"osmnx-grids of Williamsburg, Brooklyn"}),l.a.createElement("figcaption",{className:"col-lg-5"},"A close up of Williamsburg, a neighborhood of Brooklyn with a particularly interesting street pattern. Note the rainbow pattern on the curved sections of the Williamsburg Bridge and Interstate 278 as it changes as its segments change bearings."))),l.a.createElement("hr",null),l.a.createElement("div",null,l.a.createElement("a",{href:"https://github.com/abachant/osmnx-grid",className:"footer"},"View project on GitHub"),l.a.createElement("br",null),l.a.createElement("a",{href:"https://github.com/abachant/osmnx-examples/blob/add-bearing-analysis-example/notebooks/17-edge-bearing-analysis.ipynb"},"View Python Jupyter Notebook example on GitHub"),l.a.createElement("br",null),l.a.createElement("a",{href:"https://github.com/gboeing/osmnx/pull/135/files"},"View contribution to OSMnx sourcecode on GitHub")))},{title:"Rhyme Scheme Analysis",id:"4",url:"rhyme-scheme",description:"",thumbnailSrc:"",thumbnailAlt:"",html:l.a.createElement("div",null,l.a.createElement("div",null,l.a.createElement("h1",null,"Analyzing the Rhyming Habits of Songwriters"),l.a.createElement("h5",null,"April 2018"),l.a.createElement("p",null,"This project was inspired by the peculiar songwriting habits of Ray Davies. Although the majority of pop songs tend to generally follow the traditional rhyme scheme of ABAB CDCD etc., I couldn't help but notice that Ray Davies had a habit of choosing lyrics that almost deliberately didn't rhyme. I began to wonder if there was a way to quantifiy and analyze this phenomena and even find other insights into artist's lyrical habits, so I created a jupyter notebook to test that thought."),l.a.createElement("h4",null,"Getting the Data"),l.a.createElement("p",null,"The lyrics for an artist's discography was obtained by using the python library ",l.a.createElement("a",{href:"https://github.com/jameswenzel/pylyrics3"},"pylyrics3"),", which returns a nested dictionary of the artist's songs by album. From there I got the rhyme type (couplet, limerick, rondeau etc.) for for each song using the library ",l.a.createElement("a",{href:"https://github.com/hyperreality/Poetry-Tools"},"Poetry-tools"),". Most importantly for this project I created the function ",l.a.createElement("code",null,"get_rhyme_ratio()")," to get the rhyme ratio for each song and then organized all of the relevant data into a ",l.a.createElement("a",{href:"https://pandas.pydata.org/"},"Pandas")," Dataframe."),l.a.createElement("h4",null,"Rhyme Ratio"),l.a.createElement("p",null,"From my own experience writing songs and poetry and the observations of other writers I've noticed that it can actually be easier to write lines that rhyme. It can also be all too easy to stay within the safe ABAB CDCD rhyme scheme. That's why the unique songwriting of Ray Davies of The Kinks caught the attention of mine. His songs had a frequent subversion of convential pop rhyming or so it did seem."),l.a.createElement("p",null,"Rhyme ratio was a variable I came up with to try to quantitatively measure how frequently one utilizes rhymes in their writing. It is essentially the total number of unique ending phonemes divided by the total number of lines of a song. A song with a rhyme scheme of ABAB CDCD EFEF would have a ",l.a.createElement("code",null,"rhyme_ratio")," of 0.5 while a rhyme scheme of ABCC DEFF GHIJ would have a ",l.a.createElement("code",null,"rhyme_ratio")," of 0.75. This was the metric I used to try and determine how prosodically creative a song was."),l.a.createElement("h4",null,"Graphing the Results"),l.a.createElement("p",null,"After all the data was sent to the Pandas Dataframe, I then used a combination of ",l.a.createElement("a",{href:"https://matplotlib.org/index.html"},"Matplotlib")," and ",l.a.createElement("a",{href:"https://seaborn.pydata.org/"},"Seaborn")," to plot the results."),l.a.createElement("h5",null,"Rhyme Ratio by Album over Time"),l.a.createElement("img",{src:a(41),alt:"Scatter plot of rhyme ratio over time for The Kinks"}),l.a.createElement("img",{src:a(42),alt:"Violin plot of rhyme ratio over time for The Kinks"}),l.a.createElement("img",{src:a(43),alt:"Line plot of mean rhyme ratio over time for The Kinks"}),l.a.createElement("img",{src:a(44),alt:"Individual and mean plot of rhyme ratio over time for The Kinks"}),l.a.createElement("h5",null,"Rhyme Type by Album over Time"),l.a.createElement("img",{src:a(45),alt:"Bar chart of rhyme type over time for The Kinks"}),l.a.createElement("h5",null,"Instrumental vs Lyrical Song by album over Time"),l.a.createElement("img",{src:a(46),alt:"Bar chart of instrumentality by album over time for The Kinks"}),l.a.createElement("h4",null,"Conclusion"),l.a.createElement("p",null,"Looking at the line graph for mean rhyme ratio over time I did validate my personal opinion that the 'Golden Era' Kinks (albums between 'Something Else (1967)' and 'Preservation Act 2 (1974)') were more creative than the rest of their work. Upon looking at the mean rhyme ratio matched over the individual rhyme ratio violin plot I quickly realized however that the difference in mean rhyme ratios was negligible."),l.a.createElement("p",null,"Are there any real conclusions to be drawn from the data? Not really but it was very fun building and interesting to look at the way we can try to measure subject things like creativity with objective metrics. If you want to see the whole Jupyter Notebook and play around with it with your favorite artists the link is ",l.a.createElement("a",{href:"https://github.com/abachant/rhyme-scheme/blob/master/rhyme-scheme.ipynb"},"here"),".")),l.a.createElement("hr",null),l.a.createElement("div",null,l.a.createElement("p",null,l.a.createElement("a",{href:"https://github.com/abachant/rhyme-scheme/blob/master/rhyme-scheme.ipynb",className:"footer"},"View project on GitHub"))))}];var w=function(e){var t=e.match,a=E.find((function(e){return e.url===t.params.url}));return l.a.createElement("div",{className:"page-content"},a.html)};var v=function(){return l.a.createElement(o.a,null,l.a.createElement("div",{className:"App"},l.a.createElement(c,null),l.a.createElement("div",{className:"App app-content"},l.a.createElement(s.c,null,l.a.createElement(s.a,{path:"/",exact:!0,component:m}),l.a.createElement(s.a,{path:"/resume",component:h}),l.a.createElement(s.a,{path:"/projects",exact:!0,component:f}),l.a.createElement(s.a,{path:"/projects/:url",component:w})),l.a.createElement(y,null))))};Boolean("localhost"===window.location.hostname||"[::1]"===window.location.hostname||window.location.hostname.match(/^127(?:\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));i.a.render(l.a.createElement(l.a.StrictMode,null,l.a.createElement(v,null)),document.getElementById("root")),"serviceWorker"in navigator&&navigator.serviceWorker.ready.then((function(e){e.unregister()})).catch((function(e){console.error(e.message)}))}]),[[21,1,2]]]);
//# sourceMappingURL=main.82f26be3.chunk.js.map